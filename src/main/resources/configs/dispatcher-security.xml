<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"  
             xmlns:beans="http://www.springframework.org/schema/beans"  
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
             xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans.xsd  
    http://www.springframework.org/schema/security  
    http://www.springframework.org/schema/security/spring-security.xsd">  
 
     
    <http use-expressions="true" auto-config="true">
        <csrf disabled="false"/>
         <!--
        <intercept-url pattern="/" access="permitAll()" />
        <intercept-url pattern="/welcome" access="permitAll()" />
        <intercept-url pattern="/login" access="permitAll()" />
        <intercept-url pattern="/logout" access="permitAll()" />
        <intercept-url pattern="/userInfo" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')" />
        <intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/other/**" access="isAuthenticated()" />
        -->
        <intercept-url pattern="/login" access="permitAll()" />
        <intercept-url pattern="/" access="permitAll()" />
        <intercept-url pattern="/M000000" access="permitAll()" />
 
        <access-denied-handler error-page="/403" />
 <!--
        <form-login login-page='/login' login-processing-url="/j_spring_security_check"
                    default-target-url="/userInfo" always-use-default-target="false"
                    authentication-failure-url="/login?error=true" username-parameter="username"
                    password-parameter="password" />
 
        <logout logout-url="/logout" logout-success-url="/logoutSuccessful"
                delete-cookies="JSESSIONID" invalidate-session="true" /> -->
 
    </http>
 
    <authentication-manager>
        <authentication-provider>
            <user-service>
                <user name="dev" password="{noop}123" authorities="ROLE_ADMIN" />
            </user-service>
        </authentication-provider>
 
 
 
        <!-- authentication from database -->
        <!--
        <authentication-provider>
            <jdbc-user-service data-source-ref="myDataSource"
                               users-by-username-query="select username,password, enabled from users where username=?"
                               authorities-by-username-query="Select username, concat('ROLE_',user_role) user_role from user_roles where username=?" />
        </authentication-provider>
         -->
    </authentication-manager>
 
</beans:beans>







<!--
<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"  
             xmlns:beans="http://www.springframework.org/schema/beans"  
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
             xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans.xsd  
    http://www.springframework.org/schema/security  
    http://www.springframework.org/schema/security/spring-security.xsd">  
    <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/**" access="permitAll()" />
        <custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="authCheckFilter" />
        <custom-filter after="EXCEPTION_TRANSLATION_FILTER" ref="ajaxSessionTimeoutFilter" />
    </http>
    
    <beans:bean id="authCheckFilter" class="com.dm.nok.module.M000000.G000000.F000014.service.impl.AuthCheckFilter"></beans:bean>
    <beans:bean id="ajaxSessionTimeoutFilter" class="com.dm.nok.module.M000000.G000000.F000014.service.impl.AjaxSessionTimeoutFilter">
        <beans:property name="ajaxHeader" value="AJAX" />
    </beans:bean>
    
    <authentication-manager alias="authenticationManager">
        <authentication-provider ref="nokAuthenticationProvider" />
    </authentication-manager>
</beans:beans>

-->